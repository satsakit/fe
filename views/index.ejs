<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      /* เส้นแบ่งหัวของตาราง */
      table {
        border-collapse: collapse;
        width: 100%;
      }

      th {
        border: 1px solid black;
        padding: 8px;
        text-align: left;
      }

      /* เส้นแบ่งแถวของตาราง */
      td {
        border: 1px solid black;
        padding: 8px;
        text-align: left;
      }

      /* สีพื้นหลังสลับสีของแถว */
      tr:nth-child(even) {
        background-color: #f2f2f2;
      }
    </style>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x"
      crossorigin="anonymous"
    />
    <title>Intrusion Metthier</title>
    <link href="/views/index.css" rel="stylesheet" />
  </head>
  <body>
    <nav class="navbar navbar-light bg-dark">
      <div class="container-fluid justify-content-end">
        <div class="d-flex">
          <button
            type="button"
            class="btn btn-success"
            data-bs-toggle="modal"
            data-bs-target="#addDataModal"
          >
            Add
          </button>
          <a class="nav-link me-2" href="/login">Logout</a>
        </div>
      </div>
    </nav>
    <!-- Modal start สำหรับเพิ่มข้อมูล -->

    <div
      class="modal fade"
      id="addDataModal"
      tabindex="-1"
      aria-labelledby="addDataModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addDataModalLabel">Add Data</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <!-- Form for adding data -->
            <form
              id="add"
              enctype="multipart/form-data"
              method="POST"
              onsubmit="event.preventDefault(); addData();"
            >
              <div class="mb-3">
                <label for="camera_owner" class="form-label"
                  >Camera Owner</label
                >
                <input
                  type="text"
                  class="form-control"
                  id="camera_owner"
                  name="camera_owner"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="camera_name" class="form-label">Camera Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="camera_name"
                  name="camera_name"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="start_time" class="form-label">Start Time</label>
                <input
                  type="text"
                  class="form-control"
                  id="start_time"
                  name="start_time"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="end_time" class="form-label">End Time</label>
                <input
                  type="text"
                  class="form-control"
                  id="end_time"
                  name="end_time"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="image" class="form-label">Image</label>
                <input
                  type="file"
                  class="form-control"
                  id="image"
                  name="image"
                  required
                />
              </div>
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-bs-dismiss="modal"
                >
                  Close
                </button>
                <button type="submit" class="btn btn-primary">Save</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script>
      async function addData() {
        const formData = new FormData(document.getElementById("add"));
        try {
          const response = await fetch("/camera", {
            method: "POST",
            body: formData,
          });
          if (response.ok) {
            const responseData = await response.json();
            Swal.fire({
              icon: "success",
              title: "Success!",
              text: responseData.message || "Data has been added successfully.",
            }).then((result) => {
              console.log(result);
              if (result.isConfirmed) {
                console.log("hide");
                // $("#addDataModal").modal("hide"); // Close the modal using Bootstrap's method
                // Close the modal using Bootstrap's JavaScript API
                var modalElement = document.getElementById("addDataModal");
                var modalInstance = bootstrap.Modal.getInstance(modalElement);
                modalInstance.hide();
                document.getElementById("add").reset(); // Reset the form fields
                location.reload();
              }
            });
          } else {
            const errorResponse = await response.json();
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text:
                errorResponse.message ||
                "Failed to add data. Please try again.",
            });
          }
        } catch (error) {
          console.error(error);
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "Something went wrong. Please try again later.",
          });
        }
      }
    </script>

    <!-- Modal End สำหรับเพิ่มข้อมูล -->

    <table class="w-100 p-3 bg-white">
      <thead style="background-color: #ff922b">
        <tr>
          <th scope="col">#</th>
          <th scope="col">Site</th>
          <th scope="col">Camera</th>
          <th scope="col">Start Time</th>
          <th scope="col">End Time</th>
          <th scope="col">Intrusion Rule</th>
          <th scope="col">Edit</th>
          <th scope="col">Delete</th>
        </tr>
      </thead>
      <!-- แถวข้อมูล -->
      <tbody>
        <% users.forEach((item, index) => { %>
        <tr data-id="<%= item.id %>">
          <td><%= index + 1 %></td>
          <td><%= item.camera_owner %></td>
          <td><%= item.camera_name %></td>
          <td><%= item.start_time %></td>
          <td><%= item.end_time %></td>
          <td>
            <img
              src="data:image/jpeg;base64, <%= item.image %>"
              width="150"
              height="150"
            />
          </td>
          <td>
            <button
              type="button"
              class="btn btn-warning"
              data-bs-toggle="modal"
              data-bs-target="#editDataModal"
              onclick="editRow('<%=item.id%>')"
            >
              Edit
            </button>
          </td>
          <!-- Modal สำหรับแก้ไขข้อมูล -->
          <td>
            <button
              type="button"
              class="btn btn-danger"
              onclick="deleteRow('<%= item.id %>')"
            >
              Delete
            </button>
          </td>
        </tr>
        <% }) %>
        <!-- สามารถเพิ่มแถวข้อมูลเพิ่มเติมได้ตามต้องการ -->
      </tbody>
    </table>
    <!-- start edit data -->
    <div
      class="modal fade"
      id="editDataModal"
      aria-labelledby="editDataModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editDataModalLabel">Edit Data</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <!-- action="/update" -->
            <form
              id="update"
              enctype="multipart/form-data"
              method="POST"
              onsubmit="event.preventDefault(); updateData();"
            >
              <div class="mb-3">
                <input type="hidden" class="form-control" id="id" name="id" />
                <label for="site" class="form-label">Camera Owner </label>
                <input
                  type="text"
                  class="form-control"
                  id="edit_camera_owner"
                  name="camera_owner"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="camera" class="form-label">Camera Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="edit_camera_name"
                  name="camera_name"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="site" class="form-label">Start time</label>
                <input
                  type="text"
                  class="form-control"
                  id="edit_start_time"
                  name="start_time"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="site" class="form-label">End time</label>
                <input
                  type="text"
                  class="form-control"
                  id="edit_end_time"
                  name="end_time"
                  required
                />
              </div>
              <div>
                <label for="site" class="form-label">Image</label>
                <input
                  type="file"
                  class="form-control"
                  id="edit_image"
                  name="image"
                  required
                />

                <img id="shw_image" width="150" height="150" />
              </div>
              <!-- สามารถเพิ่มฟิลด์หรือองค์ประกอบอื่นๆของฟอร์มตามต้องการ -->
              <div class="modal-footer">
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-bs-dismiss="modal"
                >
                  Close
                </button>
                <button type="submit" form="update" class="btn btn-primary">
                  Save Changes
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- end edit data -->
    <script src="index.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      // Function to update image preview
      function updateImagePreview() {
        const input = document.getElementById("edit_image");
        const preview = document.getElementById("shw_image");

        input.addEventListener("change", function (event) {
          const file = event.target.files[0]; // Get the first file selected by the user

          if (file) {
            const reader = new FileReader(); // Create a FileReader object

            reader.onload = function (e) {
              preview.src = e.target.result; // Update the src of the image element
            };

            reader.readAsDataURL(file); // Read the file as a Data URL
          } else {
            preview.src = ""; // Clear the image source or set to a default image if no file selected
          }
        });
      }

      // Call the function when the script loads
      document.addEventListener("DOMContentLoaded", updateImagePreview);

      async function editRow(id) {
        const response = await fetch(`camera/${id}`);
        const result = await response.json();
        const data = result.data;
        console.log(data);
        document.getElementById("id").value = data.id;
        document.getElementById("edit_camera_owner").value = data.camera_owner;
        document.getElementById("edit_camera_name").value = data.camera_name;
        document.getElementById("edit_start_time").value = data.start_time;
        document.getElementById("edit_end_time").value = data.end_time;
        document.getElementById("edit_image").src = data.image;

        // Correctly setting the source for the image to be displayed
        if (data.image) {
          document.getElementById("shw_image").src =
            "data:image/jpeg;base64," + data.image;
        } else {
          document.getElementById("shw_image").src = ""; // Or set to a placeholder image if no image available
        }
      }

      async function updateData() {
        const formData = new FormData(document.getElementById("update"));
        try {
          const response = await fetch("/update", {
            method: "POST",
            body: formData,
          });
          console.log(response.ok);
          if (response.ok) {
            const responseData = await response.json();
            Swal.fire({
              icon: "success",
              title: "Update Success!",
              text:
                responseData.message || "Data has been update successfully.",
            }).then((result) => {
              console.log(result);
              if (result.isConfirmed) {
                console.log("hide");
                // $("#addDataModal").modal("hide"); // Close the modal using Bootstrap's method
                // Close the modal using Bootstrap's JavaScript API
                var modalElement = document.getElementById("editDataModal");
                var modalInstance = bootstrap.Modal.getInstance(modalElement);
                modalInstance.hide();
                document.getElementById("update").reset(); // Reset the form fields
                location.reload();
              }
            });
          } else {
            const errorResponse = await response.json();
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text:
                errorResponse.message ||
                "Failed to add data. Please try again.",
            });
          }
        } catch (error) {
          console.error(error);
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "Something went wrong. Please try again later.",
          });
        }
      }

      async function deleteRow(id) {
        Swal.fire({
          title: "คุณต้องการลบข้อมูลหรือไม่ ?",
          text: "คุณไม่สามารถเปลี่ยนกลับสิ่งนี้ได้!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "ใช่, ลบ ตอนนี้!",
        }).then(async (result) => {
          // Added async here
          if (result.isConfirmed) {
            try {
              const response = await fetch(`/camera/${id}`, {
                method: "DELETE",
              });

              if (response.ok) {
                console.log(response);
                const rowToDelete = document.querySelector(
                  `tr[data-id="${id}"]`
                );
                rowToDelete.remove();
                Swal.fire({
                  icon: "success",
                  title: "Success!",
                  text: "Data has been deleted successfully.",
                });
              } else {
                Swal.fire({
                  icon: "error",
                  title: "Oops...",
                  text: "Failed to delete data. Please try again.",
                });
              }
            } catch (error) {
              console.error(error);
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Something went wrong. Please try again later." + error,
              });
            }
          }
        });
      }
    </script>
  </body>
</html>
